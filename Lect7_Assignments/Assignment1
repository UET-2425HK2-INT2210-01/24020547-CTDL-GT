#include <iostream>

using namespace std;

void merge(int arr[], int l, int r, int mid) { //hàm merge để gộp
	int* a = new int[mid-l+1]; //chia đôi mảng theo vế trái
	int* b = new int[r-mid]; //chia đôi mảng theo vế phải
	for (int i = 0; i < mid - l + 1; ++i) { //cập nhật giá trị vế trái
		a[i] = arr[l + i];
	}
	for (int i = 0; i < r - mid; ++i) { //cập nhật giá trị vế phải
		b[i] = arr[mid + i + 1];
	}
	int i = 0, j = 0, k = l; //i là chỉ số vế trái, j là chỉ số vế phải, k là chỉ số cho mảng gốc
	while ((i < mid - l + 1) && (j < r - mid)) { //so sánh từng phần tử mảng vế trái và phải rồi cho vào mảng gốc
		if (a[i] <= b[j]) {
			arr[k++] = a[i++];
		}
		else {
			arr[k++] = b[j++];
		}
	}
	while (i < mid - l + 1) { //cho nốt các giá trị còn thừa mỗi mảng con vào mảng gốc trong đoạn l tới r
		arr[k++] = a[i++];
	}
	while (j < r - mid) {
		arr[k++] = b[j++];
	}
}

void mergesort(int a[], int l, int r) { //hàm mergesort để chia
	if (l >= r) return; //điều kiện dừng để mảng dc chia chỉ có tối thiểu 2 phần tử
	int mid = (l + r) / 2; //tìm mid
	mergesort(a, l, mid); //chia mảng theo vế trái
	mergesort(a, mid + 1, r); //chia mảng theo vế phải
	merge(a, l, r, mid); //chia xong thì gộp vào
}

int main() //Thực hiện xử lý input và đưa ra output theo yêu cầu
{
    freopen("numbers.txt", "r", stdin);      // Nhập từ file
    freopen("numbers.sorted", "w", stdout);  // Xuất ra file
	int *a = new int[1000];
	int n = 0;
	while(cin >> a[n]){
	n++;
	}
	mergesort(a, 0, n-1);
	for (int i = 0; i < n; ++i) {
		cout << a[i] << " ";
	}
}
